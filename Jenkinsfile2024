
pipeline{
agent any
tools {
maven 'maven3.8.6'   
}
stages{
//CheckOutCode stage    
    stage('CheckOutCode') {
      steps {
      sendSlackNotifications('STARTED')
      git branch: 'development', credentialsId: 'f9d1eb76-6798-442e-81bd-ff5425f06a9e', url: 'https://github.com/gokulvarma/maven-web-application.git'
       }
    }
//Build Stage
    stage('Build') {
      steps {
      sh "mvn clean package"  
      }
    }
     
//Execute Sonarqube Report     
    stage('ExecuteSonarQubeReport') {
      steps {
      sh "mvn clean sonar:sonar"  
      }
    }
//Upload Artifacts into mexus   
    stage('UploadArtifactIntoNexus') {
      steps {
      sh "mvn clean deploy"  
      }
    }
 //Deploy application in tomcat server.   
    stage('DeployApplicationIntoTomcat') {
      steps {
      sshagent(['ac6fec74-c3e7-4f13-8ee8-e431d49d34fa']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.36.194:/opt/tomcat9/webapps/"
}  
      
    } 
    }
}  //stages closing
post {
  success {
    sendSlackNotifications(currentBuild.result)
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
}
}  //pipeline closing
def sendSlackNotifications(String buildStatus = 'STARTED') { 
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#hdfcbank')
}
